<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_flprog_software_uart_8cpp_source" xml:lang="ru">
<title>flprogSoftwareUart.cpp</title>
<indexterm><primary>src/uart/softwareUart/flprogSoftwareUart.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_flprog_software_uart_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flprog_software_uart_8h">flprogSoftwareUart.h</link>&quot;</emphasis>
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_SOFTWARE_SERIAL</emphasis>
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00003"/>00003 
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00004"/>00004 FLProgSoftwareUart::FLProgSoftwareUart(<emphasis role="keywordtype">byte</emphasis>&#32;receivePin,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;transmitPin)
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00005"/>00005 {
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;softwarePort&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;SoftwareSerial(receivePin,&#32;transmitPin);
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00007"/>00007 }
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00008"/>00008 
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00009"/>00009 <emphasis role="keywordtype">bool</emphasis>&#32;FLProgSoftwareUart::hasPort()
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00010"/>00010 {
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!(softwarePort&#32;==&#32;0);
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00012"/>00012 }
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00013"/>00013 
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00014"/>00014 <emphasis role="keywordtype">void</emphasis>&#32;FLProgSoftwareUart::restartPort()
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00015"/>00015 {
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;softwarePort-&gt;end();
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;begin();
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00019"/>00019 }
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00020"/>00020 
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00021"/>00021 <emphasis role="keywordtype">void</emphasis>&#32;FLProgSoftwareUart::begin()
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00022"/>00022 {
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;softwarePort-&gt;begin(<link linkend="_namespaceflprog_1a82fda12bd0f0533f62fd6cf82a3e92fd">speedFromCode</link>());
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00025"/>00025 }
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00026"/>00026 
<anchor xml:id="_flprog_software_uart_8cpp_source_1l00027"/>00027 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
