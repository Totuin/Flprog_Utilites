<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_f_l_prog_i2_c" xml:lang="ru">
<title>Класс FLProgI2C</title>
<indexterm><primary>FLProgI2C</primary></indexterm>
<para>
<computeroutput>#include &lt;flprogI2C.h&gt;</computeroutput>
</para>
<para>Граф наследования:FLProgI2C:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_f_l_prog_i2_c.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_f_l_prog_i2_c_1aa342e0baacdec371430797df77504d91">FLProgI2C</link> (byte busNumber=0)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8">begin</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_f_l_prog_i2_c_1a2c6291835a10936ca3b0123289828c2a">begin</link> (int pinSDA, int pinSCL)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_f_l_prog_i2_c_1ab8d5bc5b0df5ae4a328465f262aac13b">findAddr</link> (uint8_t addr)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a30302d29cd76fc7a4335af7f6adffb5d">getErrorCode</link> ()</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">fullWrite</link> (uint8_t addr, uint8_t data)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a92371640e9c4228273a204205f501849">fullWrite</link> (uint8_t addr, const uint8_t *data, uint8_t quantity)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">fullRequestFrom</link> (uint8_t address, uint8_t quantity)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">fullRead</link> (uint8_t addr, uint8_t *data, uint8_t quantity)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a8138175390b0cc5963f99b856d590660">fullRead</link> (uint8_t addr, uint16_t *data, uint8_t quantity)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a099c9f24fc42bd98a790b1a55052e78f">fullRead</link> (uint8_t addr, uint32_t *data, uint8_t quantity)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a892e08882728362457ead1b8d391d3b1">fullReadReg</link> (uint8_t addr, uint8_t reg)</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a6109b4ca3f00c5d064a26007b0f45c55">fullWriteReg</link> (uint8_t addr, uint8_t reg, uint8_t value)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link> (uint8_t addr)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link> (const uint8_t *data, uint8_t quantity)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_i2_c_1a0632215b6c43183ceee9e2b5c1ccd733">write</link> (uint8_t data)</para>
</listitem>
            <listitem><para>virtual uint8_t <link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link> ()</para>
</listitem>
            <listitem><para>virtual int <link linkend="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996">available</link> ()</para>
</listitem>
            <listitem><para>virtual int <link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">read</link> ()</para>
</listitem>
            <listitem><para>virtual uint8_t <link linkend="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783">requestFrom</link> (uint8_t address, uint8_t quantity)</para>
</listitem>
            <listitem><para>virtual uint8_t <link linkend="_class_f_l_prog_i2_c_1aee6e857b6f238b3dc994823e7f32a04d">waitingForData</link> (uint8_t count)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_i2_c_1a88f3780a228f2ce6bb12e7e12fb1720f">setSpeed</link> (uint32_t newSpeed)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_i2_c_1a503c79844364a2a62d063cb1bdb47c33">resetSpeedFrom</link> (uint32_t newSpeed)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Защищенные члены    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_f_l_prog_i2_c_1af54dc06c96fa360014e4f87cfd2e07a4">beginWire0</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Защищенные данные    </title>
        <itemizedlist>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_f_l_prog_i2_c_1ac5af99710bd684c5f92196ebb1d7a62e">busy</link> = false</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1aaca60585af5d855d44bc1a9448dcf951">status</link> = 0</para>
</listitem>
            <listitem><para>uint8_t <link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link> = 0</para>
</listitem>
            <listitem><para>int <link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link> = -1</para>
</listitem>
            <listitem><para>int <link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link> = -1</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link> = <link linkend="_flprog_i2_c_8h_1a5d14ac1e40046405a287e54485b3f6cb">FLPROG_I2CSPEED</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00016">16</link></para>
</section>
<section>
<title>Конструктор(ы)</title>
<anchor xml:id="_class_f_l_prog_i2_c_1aa342e0baacdec371430797df77504d91"/><section>
    <title>FLProgI2C()</title>
<indexterm><primary>FLProgI2C</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>FLProgI2C</secondary></indexterm>
<para><computeroutput>FLProgI2C::FLProgI2C (byte busNumber = <computeroutput>0</computeroutput>
)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00007">7</link></para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996"/><section>
    <title>available()</title>
<indexterm><primary>available</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>available</secondary></indexterm>
<para><computeroutput>int FLProgI2C::available ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a13624df645155c7176c9d789fdf31a70">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00265">265</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8"/><section>
    <title>begin()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::begin ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1afe867564e2df6c4a4edea71d4ad0cc83">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00037">37</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a2c6291835a10936ca3b0123289828c2a"/><section>
    <title>begin()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>begin</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::begin (int pinSDA, int pinSCL)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00028">28</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c"/><section>
    <title>beginTransmission()</title>
<indexterm><primary>beginTransmission</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>beginTransmission</secondary></indexterm>
<para><computeroutput>void FLProgI2C::beginTransmission (uint8_t addr)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a709dce8dc7a0acebe0ea05c60f38c8c3">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00206">206</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1af54dc06c96fa360014e4f87cfd2e07a4"/><section>
    <title>beginWire0()</title>
<indexterm><primary>beginWire0</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>beginWire0</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::beginWire0 ( )<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00063">63</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f"/><section>
    <title>checkBus()</title>
<indexterm><primary>checkBus</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>checkBus</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::checkBus ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1ae7438d0b9d03a0d80525ac930a8dca45">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00012">12</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd"/><section>
    <title>endTransmission()</title>
<indexterm><primary>endTransmission</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>endTransmission</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::endTransmission ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1aa704301ef938bddf5c8b898bde2e186f">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00244">244</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1ab8d5bc5b0df5ae4a328465f262aac13b"/><section>
    <title>findAddr()</title>
<indexterm><primary>findAddr</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>findAddr</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::findAddr (uint8_t addr)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00119">119</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a8138175390b0cc5963f99b856d590660"/><section>
    <title>fullRead()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>fullRead</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullRead</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullRead (uint8_t addr, uint16_t * data, uint8_t quantity)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00178">178</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a099c9f24fc42bd98a790b1a55052e78f"/><section>
    <title>fullRead()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>fullRead</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullRead</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullRead (uint8_t addr, uint32_t * data, uint8_t quantity)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00192">192</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3"/><section>
    <title>fullRead()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>fullRead</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullRead</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullRead (uint8_t addr, uint8_t * data, uint8_t quantity)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00164">164</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a892e08882728362457ead1b8d391d3b1"/><section>
    <title>fullReadReg()</title>
<indexterm><primary>fullReadReg</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullReadReg</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullReadReg (uint8_t addr, uint8_t reg)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00399">399</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425"/><section>
    <title>fullRequestFrom()</title>
<indexterm><primary>fullRequestFrom</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullRequestFrom</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullRequestFrom (uint8_t address, uint8_t quantity)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00153">153</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a92371640e9c4228273a204205f501849"/><section>
    <title>fullWrite()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>fullWrite</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullWrite</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullWrite (uint8_t addr, const uint8_t * data, uint8_t quantity)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00145">145</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c"/><section>
    <title>fullWrite()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>fullWrite</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullWrite</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullWrite (uint8_t addr, uint8_t data)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00137">137</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a6109b4ca3f00c5d064a26007b0f45c55"/><section>
    <title>fullWriteReg()</title>
<indexterm><primary>fullWriteReg</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>fullWriteReg</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::fullWriteReg (uint8_t addr, uint8_t reg, uint8_t value)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00415">415</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a30302d29cd76fc7a4335af7f6adffb5d"/><section>
    <title>getErrorCode()</title>
<indexterm><primary>getErrorCode</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>getErrorCode</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::getErrorCode ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00023">23</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>read</secondary></indexterm>
<para><computeroutput>int FLProgI2C::read ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1adbf25e8d737c80071b4bea1d560dde42">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00280">280</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783"/><section>
    <title>requestFrom()</title>
<indexterm><primary>requestFrom</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>requestFrom</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::requestFrom (uint8_t address, uint8_t quantity)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a4f37c90d6ae2d3d15386c886ced36a5d">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00295">295</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a503c79844364a2a62d063cb1bdb47c33"/><section>
    <title>resetSpeedFrom()</title>
<indexterm><primary>resetSpeedFrom</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>resetSpeedFrom</secondary></indexterm>
<para><computeroutput>void FLProgI2C::resetSpeedFrom (uint32_t newSpeed)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a3fa439599c69346113f22e098af6a454">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00375">375</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a88f3780a228f2ce6bb12e7e12fb1720f"/><section>
    <title>setSpeed()</title>
<indexterm><primary>setSpeed</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>setSpeed</secondary></indexterm>
<para><computeroutput>void FLProgI2C::setSpeed (uint32_t newSpeed)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a4709597c5e1da12cde67ad82ea50ac8e">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00352">352</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1aee6e857b6f238b3dc994823e7f32a04d"/><section>
    <title>waitingForData()</title>
<indexterm><primary>waitingForData</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>waitingForData</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::waitingForData (uint8_t count)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00335">335</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295"/><section>
    <title>write()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>write</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>write</secondary></indexterm>
<para><computeroutput>void FLProgI2C::write (const uint8_t * data, uint8_t quantity)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a44b86916cf4d59f08c86b5d002f054ea">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00225">225</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a0632215b6c43183ceee9e2b5c1ccd733"/><section>
    <title>write()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>write</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>write</secondary></indexterm>
<para><computeroutput>void FLProgI2C::write (uint8_t data)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_virtual_i2_c_1a4294125e4fe71f820a53817b85391f70">FLProgVirtualI2C</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_i2_c_8cpp_source">flprogI2C.cpp</link> строка <link linkend="_flprog_i2_c_8cpp_source_1l00316">316</link></para>
</section>
</section>
<section>
<title>Данные класса</title>
<anchor xml:id="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840"/><section>
    <title>bus</title>
<indexterm><primary>bus</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>bus</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::bus<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00046">46</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1ac5af99710bd684c5f92196ebb1d7a62e"/><section>
    <title>busy</title>
<indexterm><primary>busy</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>busy</secondary></indexterm>
<para><computeroutput>bool FLProgI2C::busy = false<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00047">47</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe"/><section>
    <title>codeErr</title>
<indexterm><primary>codeErr</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>codeErr</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::codeErr = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00049">49</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce"/><section>
    <title>scl</title>
<indexterm><primary>scl</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>scl</secondary></indexterm>
<para><computeroutput>int FLProgI2C::scl = -1<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00051">51</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077"/><section>
    <title>sda</title>
<indexterm><primary>sda</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>sda</secondary></indexterm>
<para><computeroutput>int FLProgI2C::sda = -1<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00050">50</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5"/><section>
    <title>speed</title>
<indexterm><primary>speed</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>speed</secondary></indexterm>
<para><computeroutput>uint32_t FLProgI2C::speed = <link linkend="_flprog_i2_c_8h_1a5d14ac1e40046405a287e54485b3f6cb">FLPROG_I2CSPEED</link><computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00052">52</link></para>
</section>
<anchor xml:id="_class_f_l_prog_i2_c_1aaca60585af5d855d44bc1a9448dcf951"/><section>
    <title>status</title>
<indexterm><primary>status</primary><secondary>FLProgI2C</secondary></indexterm>
<indexterm><primary>FLProgI2C</primary><secondary>status</secondary></indexterm>
<para><computeroutput>uint8_t FLProgI2C::status = 0<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_i2_c_8h_source">flprogI2C.h</link> строка <link linkend="_flprog_i2_c_8h_source_1l00048">48</link></para>
</section>
<para>
Объявления и описания членов классов находятся в файлах:</para>
src/i2c/<link linkend="_flprog_i2_c_8h">flprogI2C.h</link>src/i2c/<link linkend="_flprog_i2_c_8cpp">flprogI2C.cpp</link></section>
</section>
