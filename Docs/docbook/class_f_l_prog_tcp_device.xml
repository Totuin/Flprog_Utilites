<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_f_l_prog_tcp_device" xml:lang="ru">
<title>Класс FLProgTcpDevice</title>
<indexterm><primary>FLProgTcpDevice</primary></indexterm>
<para>
<computeroutput>#include &lt;flprogTcpDevice.h&gt;</computeroutput>
</para>
<para>Граф наследования:FLProgTcpDevice:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_f_l_prog_tcp_device.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a6284fa6d5ebbb5d80dbac1d33c8169ad">beClient</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a19b4deabd8751ad90ffc8f78074786d7">beServer</link> ()</para>
</listitem>
            <listitem><para>byte <link linkend="_class_f_l_prog_tcp_device_1a640fbd479b1cce71b96cbd2d57e29c93">available</link> ()</para>
</listitem>
            <listitem><para>byte <link linkend="_class_f_l_prog_tcp_device_1af8b5c4ec514ae4187b72f9150cd11dcd">read</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a79a6dcab0f5f8b3d176e0a84e7f1eb89">setPort</link> (int port)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_f_l_prog_tcp_device_1af85f742fc5af14497d586707a35e8852">connected</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">connect</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220">connect</link> (byte ipFirst, byte ipSecond, byte ipThird, byte ipFourth)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_tcp_device_1aa03e43ea6cc1646f02b0577de0e500dc">connect</link> (uint16_t ipFirst, uint16_t ipSecond, uint16_t ipThird, uint16_t ipFourth, int newPort)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_tcp_device_1ae373c7a0ad06e3952ba73c0258057107">connect</link> (IPAddress newIp, int newPort)</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1a1847080cabb96d96ba936478c9d344bf">print</link> (String data)</para>
</listitem>
            <listitem><para>byte <link linkend="_class_f_l_prog_tcp_device_1a89be399dd246d274c43866c28342e25d">write</link> (byte buffer[], byte size)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a">begin</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1ab251ab3378529ff4c80bf2d44a0afca2">restart</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_f_l_prog_tcp_device_1af26e6967e9cef10b93c5d6e5b60cd2e3">stop</link> ()</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693">hasClient</link> ()</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa">hasServer</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Защищенные члены    </title>
        <itemizedlist>
            <listitem><para>virtual Client * <link linkend="_class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79">tcpClient</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673">setAvalibleClientFromServer</link> ()</para>
</listitem>
            <listitem><para>virtual IPAddress <link linkend="_class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e">clientRemoteIp</link> ()</para>
</listitem>
            <listitem><para>virtual int <link linkend="_class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5">clientRemotePort</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Защищенные данные    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514">mode</link> = <link linkend="_flprog_tcp_device_8h_1a04f51819679f0e7eb603a652f2e8fb45">FLPROG_TSP_CLIENT_MODE</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf">tcpPort</link> = 502</para>
</listitem>
            <listitem><para>IPAddress <link linkend="_class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c">workIp</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00017">17</link></para>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_f_l_prog_tcp_device_1a640fbd479b1cce71b96cbd2d57e29c93"/><section>
    <title>available()</title>
<indexterm><primary>available</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>available</secondary></indexterm>
<para><computeroutput>byte FLProgTcpDevice::available ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00041">41</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a6284fa6d5ebbb5d80dbac1d33c8169ad"/><section>
    <title>beClient()</title>
<indexterm><primary>beClient</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>beClient</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::beClient ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00011">11</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a"/><section>
    <title>begin()</title>
<indexterm><primary>begin</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>virtual void FLProgTcpDevice::begin ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1af00df1f2de48023e9e66a03d753e08d6">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00032">32</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a19b4deabd8751ad90ffc8f78074786d7"/><section>
    <title>beServer()</title>
<indexterm><primary>beServer</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>beServer</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::beServer ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00019">19</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e"/><section>
    <title>clientRemoteIp()</title>
<indexterm><primary>clientRemoteIp</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>clientRemoteIp</secondary></indexterm>
<para><computeroutput>virtual IPAddress FLProgTcpDevice::clientRemoteIp ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1a3da91dd567b9c4584263d26e7c36f99e">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00043">43</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5"/><section>
    <title>clientRemotePort()</title>
<indexterm><primary>clientRemotePort</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>clientRemotePort</secondary></indexterm>
<para><computeroutput>virtual int FLProgTcpDevice::clientRemotePort ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1a0441a81eb1c4713e0dda53550f196e76">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00044">44</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4"/><section>
    <title>connect()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>connect</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>connect</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::connect ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00026">26</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220"/><section>
    <title>connect()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>connect</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>connect</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::connect (byte ipFirst, byte ipSecond, byte ipThird, byte ipFourth)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00027">27</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1ae373c7a0ad06e3952ba73c0258057107"/><section>
    <title>connect()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>connect</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>connect</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::connect (IPAddress newIp, int newPort)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00081">81</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1aa03e43ea6cc1646f02b0577de0e500dc"/><section>
    <title>connect()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>connect</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>connect</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::connect (uint16_t ipFirst, uint16_t ipSecond, uint16_t ipThird, uint16_t ipFourth, int newPort)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00071">71</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1af85f742fc5af14497d586707a35e8852"/><section>
    <title>connected()</title>
<indexterm><primary>connected</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>connected</secondary></indexterm>
<para><computeroutput>bool FLProgTcpDevice::connected ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00056">56</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693"/><section>
    <title>hasClient()</title>
<indexterm><primary>hasClient</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>hasClient</secondary></indexterm>
<para><computeroutput>virtual bool FLProgTcpDevice::hasClient ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1a5c420af9d3787d1a6be1ddb1ce9c6689">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00035">35</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa"/><section>
    <title>hasServer()</title>
<indexterm><primary>hasServer</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>hasServer</secondary></indexterm>
<para><computeroutput>virtual bool FLProgTcpDevice::hasServer ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1abf01392b4e0aa774956c89413256d9cf">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00036">36</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a1847080cabb96d96ba936478c9d344bf"/><section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>print</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::print (String data)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00061">61</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1af8b5c4ec514ae4187b72f9150cd11dcd"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>read</secondary></indexterm>
<para><computeroutput>byte FLProgTcpDevice::read ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00050">50</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1ab251ab3378529ff4c80bf2d44a0afca2"/><section>
    <title>restart()</title>
<indexterm><primary>restart</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>restart</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::restart ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00027">27</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673"/><section>
    <title>setAvalibleClientFromServer()</title>
<indexterm><primary>setAvalibleClientFromServer</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>setAvalibleClientFromServer</secondary></indexterm>
<para><computeroutput>virtual void FLProgTcpDevice::setAvalibleClientFromServer ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1ad097d1f33176353990744dc642346e8a">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00042">42</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a79a6dcab0f5f8b3d176e0a84e7f1eb89"/><section>
    <title>setPort()</title>
<indexterm><primary>setPort</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>setPort</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::setPort (int port)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00003">3</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1af26e6967e9cef10b93c5d6e5b60cd2e3"/><section>
    <title>stop()</title>
<indexterm><primary>stop</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>stop</secondary></indexterm>
<para><computeroutput>void FLProgTcpDevice::stop ( )</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00036">36</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79"/><section>
    <title>tcpClient()</title>
<indexterm><primary>tcpClient</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>tcpClient</secondary></indexterm>
<para><computeroutput>virtual Client * FLProgTcpDevice::tcpClient ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Переопределяется в <link linkend="_class_f_l_prog_w5100_tcp_device_1a54f5b27a381f63ce3938df3d84785ade">FLProgW5100TcpDevice</link>.</para>
<para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00041">41</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a89be399dd246d274c43866c28342e25d"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>write</secondary></indexterm>
<para><computeroutput>byte FLProgTcpDevice::write (byte buffer[], byte size)</computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8cpp_source">flprogTcpDevice.cpp</link> строка <link linkend="_flprog_tcp_device_8cpp_source_1l00066">66</link></para>
</section>
</section>
<section>
<title>Данные класса</title>
<anchor xml:id="_class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514"/><section>
    <title>mode</title>
<indexterm><primary>mode</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>mode</secondary></indexterm>
<para><computeroutput>bool FLProgTcpDevice::mode = <link linkend="_flprog_tcp_device_8h_1a04f51819679f0e7eb603a652f2e8fb45">FLPROG_TSP_CLIENT_MODE</link><computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00039">39</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf"/><section>
    <title>tcpPort</title>
<indexterm><primary>tcpPort</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>tcpPort</secondary></indexterm>
<para><computeroutput>int FLProgTcpDevice::tcpPort = 502<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00040">40</link></para>
</section>
<anchor xml:id="_class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c"/><section>
    <title>workIp</title>
<indexterm><primary>workIp</primary><secondary>FLProgTcpDevice</secondary></indexterm>
<indexterm><primary>FLProgTcpDevice</primary><secondary>workIp</secondary></indexterm>
<para><computeroutput>IPAddress FLProgTcpDevice::workIp<computeroutput>[protected]</computeroutput></computeroutput></para><para>
См. определение в файле <link linkend="_flprog_tcp_device_8h_source">flprogTcpDevice.h</link> строка <link linkend="_flprog_tcp_device_8h_source_1l00045">45</link></para>
</section>
<para>
Объявления и описания членов классов находятся в файлах:</para>
src/tcp/<link linkend="_flprog_tcp_device_8h">flprogTcpDevice.h</link>src/tcp/<link linkend="_flprog_tcp_device_8cpp">flprogTcpDevice.cpp</link></section>
</section>
