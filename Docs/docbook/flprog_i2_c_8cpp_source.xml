<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_flprog_i2_c_8cpp_source" xml:lang="ru">
<title>flprogI2C.cpp</title>
<indexterm><primary>src/i2c/flprogI2C.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_flprog_i2_c_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flprog_i2_c_8h">flprogI2C.h</link>&quot;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00002"/>00002 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_STM32</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00004"/>00004 TwoWire&#32;Wire1(PB11,&#32;PB10);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00006"/>00006 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00007"/><link linkend="_class_f_l_prog_i2_c_1aa342e0baacdec371430797df77504d91">00007</link> <link linkend="_class_f_l_prog_i2_c_1aa342e0baacdec371430797df77504d91">FLProgI2C::FLProgI2C</link>(<emphasis role="keywordtype">byte</emphasis>&#32;busNumber)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00008"/>00008 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;=&#32;busNumber;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00010"/>00010 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00011"/>00011 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00012"/><link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">00012</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">FLProgI2C::checkBus</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00013"/>00013 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00018"/>00018 <emphasis role="preprocessor">#ifdef&#32;FLPROG_FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00021"/>00021 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00024"/>00024 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00026"/>00026 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00027"/>00027 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00028"/><link linkend="_class_f_l_prog_i2_c_1a2c6291835a10936ca3b0123289828c2a">00028</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8">FLProgI2C::begin</link>(<emphasis role="keywordtype">int</emphasis>&#32;pinSDA,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pinSCL)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00029"/>00029 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>&#32;=&#32;pinSDA;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>&#32;=&#32;pinSCL;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8">begin</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00033"/>00033 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00034"/>00034 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00035"/>00035 <emphasis role="comment">//&#32;---------BEGIN---------</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00036"/>00036 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00037"/><link linkend="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8">00037</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1aa02c7b40c4a8ad16717a6a8816bdc9c8">FLProgI2C::begin</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00038"/>00038 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;0;&#32;<emphasis role="comment">//--Очистка&#32;кода&#32;ошибки;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1aaca60585af5d855d44bc1a9448dcf951">status</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1af54dc06c96fa360014e4f87cfd2e07a4">beginWire0</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00056"/>00056 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;beginWire1();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00061"/>00061 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00062"/>00062 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00063"/><link linkend="_class_f_l_prog_i2_c_1af54dc06c96fa360014e4f87cfd2e07a4">00063</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1af54dc06c96fa360014e4f87cfd2e07a4">FLProgI2C::beginWire0</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00064"/>00064 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_AVR</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;Wire.begin();&#32;<emphasis role="comment">//--Инициализация&#32;как&#32;Master;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00067"/>00067 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00068"/>00068 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#if&#32;defined(CORE_ESP8266)&#32;||&#32;defined(CORE_STM32)</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>&#32;&lt;&#32;0)&#32;||&#32;(<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>&#32;&lt;&#32;0))
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.begin();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.begin(<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>);&#32;<emphasis role="comment">//--Установка&#32;номеров&#32;пинов&#32;SDA,SCL&#32;и&#32;инициализация&#32;как&#32;Master;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00078"/>00078 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00079"/>00079 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00080"/>00080 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_ESP8266</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;Wire.setClockStretchLimit(260);&#32;<emphasis role="comment">//--Ограничение&#32;лимита&#32;по&#32;времени;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00082"/>00082 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00083"/>00083 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_ESP32</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;Wire.begin(<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00085"/>00085 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00086"/>00086 <emphasis role="preprocessor">#ifndef&#32;FLPROG_CORE_ESP32</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;Wire.setClock(<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);&#32;<emphasis role="comment">//--Установка&#32;частоты&#32;шины;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00088"/>00088 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1aaca60585af5d855d44bc1a9448dcf951">status</link>&#32;=&#32;1;&#32;<emphasis role="comment">//--Установка&#32;статуса&#32;Master&#32;и&#32;успешный&#32;выход;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00091"/>00091 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00092"/>00092 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00093"/>00093 <emphasis role="preprocessor">#ifdef&#32;FLPROG_FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00094"/>00094 <emphasis role="keywordtype">bool</emphasis>&#32;FLProgI2C::beginWire1()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00095"/>00095 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00096"/>00096 <emphasis role="preprocessor">#ifdef&#32;CORE_STM32</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>&#32;&lt;&#32;0)&#32;||&#32;(<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>&#32;&lt;&#32;0))
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.begin();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.begin(<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>);&#32;<emphasis role="comment">//--Установка&#32;номеров&#32;пинов&#32;SDA,SCL&#32;и&#32;инициализация&#32;как&#32;Master;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00105"/>00105 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;Wire1.setClock(<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);&#32;<emphasis role="comment">//--Установка&#32;частоты&#32;шины;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00107"/>00107 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00108"/>00108 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_ESP32</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;Wire1.begin(<link linkend="_class_f_l_prog_i2_c_1acc22da1b4dd7d3f0a8af37f6d0306077">sda</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a2c16c5e38d1ad15a41df894e4485dcce">scl</link>,&#32;<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;Wire1.setClock(<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);&#32;<emphasis role="comment">//--Установка&#32;частоты&#32;шины;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00111"/>00111 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1aaca60585af5d855d44bc1a9448dcf951">status</link>&#32;=&#32;1;&#32;<emphasis role="comment">//--Установка&#32;статуса&#32;Master&#32;и&#32;успешный&#32;выход;</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00114"/>00114 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00115"/>00115 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00116"/>00116 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00117"/>00117 <emphasis role="comment">//&#32;---------END_BEGIN---------</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00118"/>00118 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00119"/><link linkend="_class_f_l_prog_i2_c_1ab8d5bc5b0df5ae4a328465f262aac13b">00119</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1ab8d5bc5b0df5ae4a328465f262aac13b">FLProgI2C::findAddr</link>(uint8_t&#32;addr)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00120"/>00120 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(addr&#32;&gt;&#32;254)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;61;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link>(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;==&#32;0);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00135"/>00135 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00136"/>00136 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00137"/><link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">00137</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">FLProgI2C::fullWrite</link>(uint8_t&#32;addr,&#32;uint8_t&#32;data)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00138"/>00138 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link>(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link>(data);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00143"/>00143 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00144"/>00144 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00145"/><link linkend="_class_f_l_prog_i2_c_1a92371640e9c4228273a204205f501849">00145</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">FLProgI2C::fullWrite</link>(uint8_t&#32;addr,&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00146"/>00146 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link>(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link>(data,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00151"/>00151 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00152"/>00152 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00153"/><link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">00153</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">FLProgI2C::fullRequestFrom</link>(uint8_t&#32;address,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00154"/>00154 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;uint8_t&#32;result&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783">requestFrom</link>(address,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(quantity&#32;!=&#32;result)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;80;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1aee6e857b6f238b3dc994823e7f32a04d">waitingForData</link>(quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00162"/>00162 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00163"/>00163 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00164"/><link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">00164</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">FLProgI2C::fullRead</link>(uint8_t&#32;addr,&#32;uint8_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00165"/>00165 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">fullRequestFrom</link>(addr,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;quantity;&#32;i++)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[i]&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">read</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00176"/>00176 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00177"/>00177 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00178"/><link linkend="_class_f_l_prog_i2_c_1a8138175390b0cc5963f99b856d590660">00178</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">FLProgI2C::fullRead</link>(uint8_t&#32;addr,&#32;uint16_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00179"/>00179 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">fullRequestFrom</link>(addr,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;quantity;&#32;i++)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[i]&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">read</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00190"/>00190 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00191"/>00191 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00192"/><link linkend="_class_f_l_prog_i2_c_1a099c9f24fc42bd98a790b1a55052e78f">00192</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">FLProgI2C::fullRead</link>(uint8_t&#32;addr,&#32;uint32_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00193"/>00193 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1abd81f98e7f06c1e539e7cb053f4fe425">fullRequestFrom</link>(addr,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint8_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;quantity;&#32;i++)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[i]&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">read</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00204"/>00204 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00205"/>00205 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00206"/><link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">00206</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">FLProgI2C::beginTransmission</link>(uint8_t&#32;addr)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00207"/>00207 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.beginTransmission(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00217"/>00217 <emphasis role="preprocessor">#ifdef&#32;FLPROG_FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.beginTransmission(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00222"/>00222 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00223"/>00223 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00224"/>00224 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00225"/><link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">00225</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">FLProgI2C::write</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00226"/>00226 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.write(data,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00236"/>00236 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.write(data,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00241"/>00241 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00242"/>00242 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00243"/>00243 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00244"/><link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">00244</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">FLProgI2C::endTransmission</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00245"/>00245 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire.endTransmission();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00255"/>00255 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire1.endTransmission();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00260"/>00260 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00261"/>00261 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00263"/>00263 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00264"/>00264 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00265"/><link linkend="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996">00265</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996">FLProgI2C::available</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00266"/>00266 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire.available();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00271"/>00271 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire1.available();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00276"/>00276 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00278"/>00278 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00279"/>00279 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00280"/><link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">00280</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">FLProgI2C::read</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00281"/>00281 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire.read();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00286"/>00286 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire1.read();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00291"/>00291 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00293"/>00293 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00294"/>00294 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00295"/><link linkend="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783">00295</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783">FLProgI2C::requestFrom</link>(uint8_t&#32;address,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00296"/>00296 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00302"/>00302 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire.requestFrom(address,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00307"/>00307 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Wire1.requestFrom(address,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00312"/>00312 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00314"/>00314 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00315"/>00315 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00316"/><link linkend="_class_f_l_prog_i2_c_1a0632215b6c43183ceee9e2b5c1ccd733">00316</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">FLProgI2C::write</link>(uint8_t&#32;data)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00317"/>00317 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.write(data);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00327"/>00327 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.write(data);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00332"/>00332 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00333"/>00333 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00334"/>00334 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00335"/><link linkend="_class_f_l_prog_i2_c_1aee6e857b6f238b3dc994823e7f32a04d">00335</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1aee6e857b6f238b3dc994823e7f32a04d">FLProgI2C::waitingForData</link>(uint8_t&#32;count)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00336"/>00336 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;uint32_t&#32;timeOut&#32;=&#32;150&#32;*&#32;count;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;uint32_t&#32;startTime&#32;=&#32;micros();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996">available</link>())&#32;&gt;=&#32;count)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespaceflprog_1a9f288356ee2d40b2b2ada99354e56ba9">flprog::isTimerMicros</link>(startTime,&#32;timeOut))
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;6;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(1);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00350"/>00350 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00351"/>00351 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00352"/><link linkend="_class_f_l_prog_i2_c_1a88f3780a228f2ce6bb12e7e12fb1720f">00352</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a88f3780a228f2ce6bb12e7e12fb1720f">FLProgI2C::setSpeed</link>(uint32_t&#32;newSpeed)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00353"/>00353 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newSpeed&#32;==&#32;<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.setClock(newSpeed);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00367"/>00367 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.setClock(newSpeed);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00372"/>00372 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00373"/>00373 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00374"/>00374 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00375"/><link linkend="_class_f_l_prog_i2_c_1a503c79844364a2a62d063cb1bdb47c33">00375</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1a503c79844364a2a62d063cb1bdb47c33">FLProgI2C::resetSpeedFrom</link>(uint32_t&#32;newSpeed)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00376"/>00376 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>())
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;65;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newSpeed&#32;==&#32;<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00386"/>00386 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;0)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire.setClock(<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00391"/>00391 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CAN_USE_I2C_1</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1a9f2ea9ffa26cacbe15713a8c273b1840">bus</link>&#32;==&#32;1)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Wire1.setClock(<link linkend="_class_f_l_prog_i2_c_1a315834924a91711026b3afe436cef7a5">speed</link>);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00396"/>00396 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00397"/>00397 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00398"/>00398 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00399"/><link linkend="_class_f_l_prog_i2_c_1a892e08882728362457ead1b8d391d3b1">00399</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a892e08882728362457ead1b8d391d3b1">FLProgI2C::fullReadReg</link>(uint8_t&#32;addr,&#32;uint8_t&#32;reg)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00400"/>00400 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;uint8_t&#32;data[1];
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">fullWrite</link>(addr,&#32;reg);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1a305b69dc03da92d44a3ab5cfbc42f4c3">fullRead</link>(addr,&#32;data,&#32;1);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[0];
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00413"/>00413 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00414"/>00414 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00415"/><link linkend="_class_f_l_prog_i2_c_1a6109b4ca3f00c5d064a26007b0f45c55">00415</link> uint8_t&#32;<link linkend="_class_f_l_prog_i2_c_1a6109b4ca3f00c5d064a26007b0f45c55">FLProgI2C::fullWriteReg</link>(uint8_t&#32;addr,&#32;uint8_t&#32;reg,&#32;uint8_t&#32;value)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00416"/>00416 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;uint8_t&#32;data[2];
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;data[0]&#32;=&#32;reg;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;data[1]&#32;=&#32;value;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2_c_1afa212327f982acb0c007365867f5f85c">fullWrite</link>(addr,&#32;data,&#32;2);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_f_l_prog_i2_c_1adae7361cf9e79156465ef455cf8bfafe">codeErr</link>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00422"/>00422 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00423"/>00423 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00424"/>00424 <emphasis role="comment">//--------------FLProgTCA9548A----------</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00425"/>00425 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00426"/><link linkend="_class_f_l_prog_t_c_a9548_a_1aa63bd6a13c36154efa3e1a8d0ff9a822">00426</link> <link linkend="_class_f_l_prog_t_c_a9548_a_1aa63bd6a13c36154efa3e1a8d0ff9a822">FLProgTCA9548A::FLProgTCA9548A</link>(<link linkend="_class_f_l_prog_i2_c">FLProgI2C</link>&#32;*device,&#32;uint8_t&#32;deviceAddress)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00427"/>00427 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;i2cDevice&#32;=&#32;device;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;address&#32;=&#32;deviceAddress;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00430"/>00430 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00431"/>00431 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00432"/><link linkend="_class_f_l_prog_t_c_a9548_a_1aec827410ce3f745b9b7996d343aa59c8">00432</link> <link linkend="_class_f_l_prog_t_c_a9548_a_1aa63bd6a13c36154efa3e1a8d0ff9a822">FLProgTCA9548A::FLProgTCA9548A</link>(<link linkend="_class_f_l_prog_i2_c">FLProgI2C</link>&#32;*device)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00433"/>00433 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;i2cDevice&#32;=&#32;device;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;address&#32;=&#32;0x70;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00436"/>00436 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00437"/>00437 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00438"/><link linkend="_class_f_l_prog_t_c_a9548_a_1aed692e8c5a9afa68ded1473c01242061">00438</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1aed692e8c5a9afa68ded1473c01242061">FLProgTCA9548A::beginTransmission</link>(uint8_t&#32;addr,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00439"/>00439 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link>(addr);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00442"/>00442 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00443"/>00443 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00444"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a5365a243dfe70ba78a3afb1e05334eaa">00444</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5365a243dfe70ba78a3afb1e05334eaa">FLProgTCA9548A::write</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*data,&#32;uint8_t&#32;quantity,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00445"/>00445 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link>(data,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00447"/>00447 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00448"/>00448 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00449"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a4d4fbc1fae9fd738262805d0cb2ee8ab">00449</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5365a243dfe70ba78a3afb1e05334eaa">FLProgTCA9548A::write</link>(uint8_t&#32;data,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00450"/>00450 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link>(data);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00452"/>00452 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00453"/>00453 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00454"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a4a527cd34332b4ec2810b4c10c080ccc">00454</link> uint8_t&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a4a527cd34332b4ec2810b4c10c080ccc">FLProgTCA9548A::endTransmission</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00455"/>00455 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00456"/>00456 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00458"/>00458 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00459"/>00459 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00460"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a6f5d6034334ef43006ff10928cce572f">00460</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a6f5d6034334ef43006ff10928cce572f">FLProgTCA9548A::available</link>(uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00461"/>00461 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1aba022e66607f05597b9ddaec870be996">available</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00464"/>00464 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00465"/>00465 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00466"/><link linkend="_class_f_l_prog_t_c_a9548_a_1acf146e5bdfe3b2c794bfccb374ee41ac">00466</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1acf146e5bdfe3b2c794bfccb374ee41ac">FLProgTCA9548A::read</link>(uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00467"/>00467 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a268ba68fcfd993189ab01ce61dfb50e7">read</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00470"/>00470 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00471"/>00471 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00472"/><link linkend="_class_f_l_prog_t_c_a9548_a_1aee5d3e1387cee3410655be01042107f5">00472</link> uint8_t&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1aee5d3e1387cee3410655be01042107f5">FLProgTCA9548A::requestFrom</link>(uint8_t&#32;address,&#32;uint8_t&#32;quantity,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00473"/>00473 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a5d816185c13673ebdb78c167f351f783">requestFrom</link>(address,&#32;quantity);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00476"/>00476 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00477"/>00477 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00478"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a3dca5052bce732d52235c4231a3776fa">00478</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a3dca5052bce732d52235c4231a3776fa">FLProgTCA9548A::setSpeed</link>(uint32_t&#32;newSpeed,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00479"/>00479 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a88f3780a228f2ce6bb12e7e12fb1720f">setSpeed</link>(newSpeed);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00482"/>00482 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00483"/>00483 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00484"/><link linkend="_class_f_l_prog_t_c_a9548_a_1afa05ee993ca840058edb29c0e5e97672">00484</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1afa05ee993ca840058edb29c0e5e97672">FLProgTCA9548A::resetSpeedFrom</link>(uint32_t&#32;newSpeed,&#32;uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00485"/>00485 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;switchToChanel(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a503c79844364a2a62d063cb1bdb47c33">resetSpeedFrom</link>(newSpeed);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00488"/>00488 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00489"/>00489 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00490"/><link linkend="_class_f_l_prog_t_c_a9548_a_1a5e2624fc72576aacf71b804680f0b791">00490</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5e2624fc72576aacf71b804680f0b791">FLProgTCA9548A::checkBus</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00491"/>00491 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a126715f17f31ecdf2ea449ca6999bb1f">checkBus</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00493"/>00493 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00494"/>00494 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00495"/>00495 <emphasis role="keywordtype">void</emphasis>&#32;FLProgTCA9548A::switchToChanel(uint8_t&#32;chanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00496"/>00496 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chanel&#32;==&#32;currentChanel)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00501"/>00501 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(chanel&#32;&gt;&#32;7)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorCode&#32;=&#32;80;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00507"/>00507 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a74f8323be61a90bedcbc37d4bdbd525c">beginTransmission</link>(address);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1a80b48594359954559e75faf5e4be7295">write</link>(1&#32;&lt;&lt;&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;errorCode&#32;=&#32;i2cDevice-&gt;<link linkend="_class_f_l_prog_i2_c_1ab40e40756e66c34b99e3e513302d6afd">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;currentChanel&#32;=&#32;chanel;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00512"/>00512 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00513"/>00513 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00514"/>00514 <emphasis role="comment">//--------------FLProgVirtualI2C----------</emphasis>
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00515"/>00515 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00516"/><link linkend="_class_f_l_prog_virtual_i2_c_1a2a63f5ef9f98a902b8b6cd9409e3edf5">00516</link> <link linkend="_class_f_l_prog_virtual_i2_c_1a2a63f5ef9f98a902b8b6cd9409e3edf5">FLProgVirtualI2C::FLProgVirtualI2C</link>(<link linkend="_class_f_l_prog_t_c_a9548_a">FLProgTCA9548A</link>&#32;*parentDevice,&#32;uint8_t&#32;chanelOnParent)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00517"/>00517 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;parent&#32;=&#32;parentDevice;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;chanel&#32;=&#32;chanelOnParent;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00520"/>00520 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00521"/>00521 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00522"/><link linkend="_class_f_l_prog_virtual_i2_c_1afe867564e2df6c4a4edea71d4ad0cc83">00522</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1afe867564e2df6c4a4edea71d4ad0cc83">FLProgVirtualI2C::begin</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00523"/>00523 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00525"/>00525 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00526"/>00526 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00527"/><link linkend="_class_f_l_prog_virtual_i2_c_1a709dce8dc7a0acebe0ea05c60f38c8c3">00527</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a709dce8dc7a0acebe0ea05c60f38c8c3">FLProgVirtualI2C::beginTransmission</link>(uint8_t&#32;addr)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00528"/>00528 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1aed692e8c5a9afa68ded1473c01242061">beginTransmission</link>(addr,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00530"/>00530 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00531"/>00531 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00532"/><link linkend="_class_f_l_prog_virtual_i2_c_1a44b86916cf4d59f08c86b5d002f054ea">00532</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a44b86916cf4d59f08c86b5d002f054ea">FLProgVirtualI2C::write</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*data,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00533"/>00533 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5365a243dfe70ba78a3afb1e05334eaa">write</link>(data,&#32;quantity,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00535"/>00535 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00536"/>00536 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00537"/><link linkend="_class_f_l_prog_virtual_i2_c_1a4294125e4fe71f820a53817b85391f70">00537</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a44b86916cf4d59f08c86b5d002f054ea">FLProgVirtualI2C::write</link>(uint8_t&#32;data)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00538"/>00538 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5365a243dfe70ba78a3afb1e05334eaa">write</link>(data,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00540"/>00540 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00541"/>00541 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00542"/><link linkend="_class_f_l_prog_virtual_i2_c_1aa704301ef938bddf5c8b898bde2e186f">00542</link> uint8_t&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1aa704301ef938bddf5c8b898bde2e186f">FLProgVirtualI2C::endTransmission</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00543"/>00543 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a4a527cd34332b4ec2810b4c10c080ccc">endTransmission</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00545"/>00545 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00546"/>00546 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00547"/><link linkend="_class_f_l_prog_virtual_i2_c_1a13624df645155c7176c9d789fdf31a70">00547</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a13624df645155c7176c9d789fdf31a70">FLProgVirtualI2C::available</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00548"/>00548 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a6f5d6034334ef43006ff10928cce572f">available</link>(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00550"/>00550 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00551"/>00551 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00552"/><link linkend="_class_f_l_prog_virtual_i2_c_1adbf25e8d737c80071b4bea1d560dde42">00552</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1adbf25e8d737c80071b4bea1d560dde42">FLProgVirtualI2C::read</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00553"/>00553 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1acf146e5bdfe3b2c794bfccb374ee41ac">read</link>(chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00555"/>00555 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00556"/>00556 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00557"/><link linkend="_class_f_l_prog_virtual_i2_c_1a4f37c90d6ae2d3d15386c886ced36a5d">00557</link> uint8_t&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a4f37c90d6ae2d3d15386c886ced36a5d">FLProgVirtualI2C::requestFrom</link>(uint8_t&#32;address,&#32;uint8_t&#32;quantity)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00558"/>00558 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1aee5d3e1387cee3410655be01042107f5">requestFrom</link>(address,&#32;quantity,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00560"/>00560 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00561"/>00561 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00562"/><link linkend="_class_f_l_prog_virtual_i2_c_1a4709597c5e1da12cde67ad82ea50ac8e">00562</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a4709597c5e1da12cde67ad82ea50ac8e">FLProgVirtualI2C::setSpeed</link>(uint32_t&#32;newSpeed)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00563"/>00563 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a3dca5052bce732d52235c4231a3776fa">setSpeed</link>(newSpeed,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00565"/>00565 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00566"/>00566 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00567"/><link linkend="_class_f_l_prog_virtual_i2_c_1a3fa439599c69346113f22e098af6a454">00567</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1a3fa439599c69346113f22e098af6a454">FLProgVirtualI2C::resetSpeedFrom</link>(uint32_t&#32;newSpeed)
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00568"/>00568 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1afa05ee993ca840058edb29c0e5e97672">resetSpeedFrom</link>(newSpeed,&#32;chanel);
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00570"/>00570 }
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00571"/>00571 
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00572"/><link linkend="_class_f_l_prog_virtual_i2_c_1ae7438d0b9d03a0d80525ac930a8dca45">00572</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_virtual_i2_c_1ae7438d0b9d03a0d80525ac930a8dca45">FLProgVirtualI2C::checkBus</link>()
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00573"/>00573 {
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;parent-&gt;<link linkend="_class_f_l_prog_t_c_a9548_a_1a5e2624fc72576aacf71b804680f0b791">checkBus</link>();
<anchor xml:id="_flprog_i2_c_8cpp_source_1l00575"/>00575 }
</programlisting></section>
