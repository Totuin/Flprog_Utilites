<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_flprog_i2_c__sensors_basic_8cpp_source" xml:lang="ru">
<title>flprogI2C_sensorsBasic.cpp</title>
<indexterm><primary>src/i2c/flprogI2C_sensorsBasic.cpp</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flprog_i2_c__sensors_basic_8h">flprogI2C_sensorsBasic.h</link>&quot;</emphasis>
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00002"/>00002 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00003"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1a85f6498d48f835599c17fa0df4408b21">00003</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a85f6498d48f835599c17fa0df4408b21">FLProgI2cStepWorkSensor::checkDelay</link>()
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00004"/>00004 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00005"/>00005 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac077cf3b16ecf859effc6609bf03a531">step</link>&#32;==&#32;<link linkend="_flprog_utilites_8h_1ace19cbe1e3ba044e8fd2f2db87fdcce4">FLPROG_SENSOR_WAITING_DELAY</link>)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespaceflprog_1acc5a367798f79f5340fa5de409ac22d4">flprog::isTimer</link>(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a67de0a22679aceca8be256a7f332dd1c">startDelay</link>,&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a3ca8e4d3cdc89c82e291241a67ff4a68">sizeDelay</link>))
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac077cf3b16ecf859effc6609bf03a531">step</link>&#32;=&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a7fc990383e0a84ddf97bfddf61507ff2">stepAfterDelay</link>;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00013"/>00013 }
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00014"/>00014 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00015"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1a72a5f525e728b0801ddb2e911afacc3b">00015</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a72a5f525e728b0801ddb2e911afacc3b">FLProgI2cStepWorkSensor::read</link>()
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00016"/>00016 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ae4827a4151f973dfbca09e0f15663767">isNeededRead</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00018"/>00018 }
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00019"/>00019 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00020"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1a7c5547cb9e63baf21658b6d33220ba3a">00020</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a7c5547cb9e63baf21658b6d33220ba3a">FLProgI2cStepWorkSensor::setReadPeriod</link>(uint32_t&#32;period)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00021"/>00021 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aa14c06c54f73c50a39d6b5264e3e66e9">readPeriod</link>&#32;=&#32;period;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00023"/>00023 }
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00024"/>00024 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00025"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac2080f524107c1645440b8d7b0a2526e">00025</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac2080f524107c1645440b8d7b0a2526e">FLProgI2cStepWorkSensor::checkReadPeriod</link>()
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00026"/>00026 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aa14c06c54f73c50a39d6b5264e3e66e9">readPeriod</link>&#32;&gt;&#32;0)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespaceflprog_1acc5a367798f79f5340fa5de409ac22d4">flprog::isTimer</link>(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aecaacada2d47aa5709f44ca5660de74d">startReadPeriod</link>,&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aa14c06c54f73c50a39d6b5264e3e66e9">readPeriod</link>))
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aecaacada2d47aa5709f44ca5660de74d">startReadPeriod</link>&#32;=&#32;millis();
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a72a5f525e728b0801ddb2e911afacc3b">read</link>();
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00035"/>00035 }
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00036"/>00036 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00037"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1aa3d0c08a85519ce3bd136575255c48bf">00037</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1aa3d0c08a85519ce3bd136575255c48bf">FLProgI2cStepWorkSensor::gotoStepWithDelay</link>(uint8_t&#32;newStep,&#32;uint32_t&#32;delay)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00038"/>00038 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a67de0a22679aceca8be256a7f332dd1c">startDelay</link>&#32;=&#32;millis();
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a3ca8e4d3cdc89c82e291241a67ff4a68">sizeDelay</link>&#32;=&#32;delay;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a7fc990383e0a84ddf97bfddf61507ff2">stepAfterDelay</link>&#32;=&#32;newStep;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac077cf3b16ecf859effc6609bf03a531">step</link>&#32;=&#32;<link linkend="_flprog_utilites_8h_1ace19cbe1e3ba044e8fd2f2db87fdcce4">FLPROG_SENSOR_WAITING_DELAY</link>;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00043"/>00043 }
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00044"/>00044 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00045"/><link linkend="_class_f_l_prog_i2c_step_work_sensor_1a3417638ce26313aeae54f638b80cfb25">00045</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1a3417638ce26313aeae54f638b80cfb25">FLProgI2cStepWorkSensor::checkNeededRead</link>()
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00046"/>00046 {
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ac077cf3b16ecf859effc6609bf03a531">step</link>&#32;==&#32;<link linkend="_flprog_utilites_8h_1a3f3cf4c2020b3aef1e75d1d584425e76">FLPROG_SENSOR_WAITING_READ_STEP</link>)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00049"/>00049 
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ae4827a4151f973dfbca09e0f15663767">isNeededRead</link>)
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ae30f110f5a8ee5450478a559083ab31e">readSensor</link>();
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_f_l_prog_i2c_step_work_sensor_1ae4827a4151f973dfbca09e0f15663767">isNeededRead</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="_flprog_i2_c__sensors_basic_8cpp_source_1l00056"/>00056 }
</programlisting></section>
