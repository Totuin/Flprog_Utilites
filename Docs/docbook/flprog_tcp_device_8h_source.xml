<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_flprog_tcp_device_8h_source" xml:lang="ru">
<title>flprogTcpDevice.h</title>
<indexterm><primary>src/tcp/flprogTcpDevice.h</primary></indexterm>
См. документацию.<programlisting linenumbering="unnumbered"><anchor xml:id="_flprog_tcp_device_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;Arduino.h&quot;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_flprog_utilites_8h">./flprogUtilites.h</link>&quot;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#ifndef&#32;FLPROG_CORE_ESP8266_OR_ESP32</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;Ethernet.h&quot;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;SPI.h&quot;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#ifdef&#32;ESP8266</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;ESP8266WiFi.h&gt;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00010"/>00010 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#ifdef&#32;ESP32</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;WiFi.h&quot;</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00014"/><link linkend="_flprog_tcp_device_8h_1aabcce68db3bc9710dc01623fabc76cea">00014</link> <emphasis role="preprocessor">#define&#32;FLPROG_TCP_SERVER_MODE&#32;1</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00015"/><link linkend="_flprog_tcp_device_8h_1a04f51819679f0e7eb603a652f2e8fb45">00015</link> <emphasis role="preprocessor">#define&#32;FLPROG_TSP_CLIENT_MODE&#32;0</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00016"/>00016 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00017"/><link linkend="_class_f_l_prog_tcp_device">00017</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_f_l_prog_tcp_device">FLProgTcpDevice</link>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00018"/>00018 {
<anchor xml:id="_flprog_tcp_device_8h_source_1l00019"/>00019 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a6284fa6d5ebbb5d80dbac1d33c8169ad">beClient</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a19b4deabd8751ad90ffc8f78074786d7">beServer</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a640fbd479b1cce71b96cbd2d57e29c93">available</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1af8b5c4ec514ae4187b72f9150cd11dcd">read</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a79a6dcab0f5f8b3d176e0a84e7f1eb89">setPort</link>(<emphasis role="keywordtype">int</emphasis>&#32;port);
<anchor xml:id="_flprog_tcp_device_8h_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1af85f742fc5af14497d586707a35e8852">connected</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00026"/><link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">connect</link>()&#32;{&#32;<link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">connect</link>(0,&#32;0,&#32;0,&#32;0);&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00027"/><link linkend="_class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220">connect</link>(<emphasis role="keywordtype">byte</emphasis>&#32;ipFirst,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;ipSecond,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;ipThird,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;ipFourth)&#32;{&#32;<link linkend="_class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220">connect</link>(ipFirst,&#32;ipSecond,&#32;ipThird,&#32;ipFourth,&#32;<link linkend="_class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf">tcpPort</link>);&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">connect</link>(uint16_t&#32;ipFirst,&#32;uint16_t&#32;ipSecond,&#32;uint16_t&#32;ipThird,&#32;uint16_t&#32;ipFourth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;newPort);
<anchor xml:id="_flprog_tcp_device_8h_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4">connect</link>(IPAddress&#32;newIp,&#32;<emphasis role="keywordtype">int</emphasis>&#32;newPort);
<anchor xml:id="_flprog_tcp_device_8h_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a1847080cabb96d96ba936478c9d344bf">print</link>(String&#32;data);
<anchor xml:id="_flprog_tcp_device_8h_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a89be399dd246d274c43866c28342e25d">write</link>(<emphasis role="keywordtype">byte</emphasis>&#32;buffer[],&#32;<emphasis role="keywordtype">byte</emphasis>&#32;size);
<anchor xml:id="_flprog_tcp_device_8h_source_1l00032"/><link linkend="_class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a">00032</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a">begin</link>(){};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1ab251ab3378529ff4c80bf2d44a0afca2">restart</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1af26e6967e9cef10b93c5d6e5b60cd2e3">stop</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00035"/><link linkend="_class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693">hasClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00036"/><link linkend="_class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa">hasServer</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00037"/>00037 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00038"/>00038 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00039"/><link linkend="_class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514">00039</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514">mode</link>&#32;=&#32;<link linkend="_flprog_tcp_device_8h_1a04f51819679f0e7eb603a652f2e8fb45">FLPROG_TSP_CLIENT_MODE</link>;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00040"/><link linkend="_class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf">00040</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf">tcpPort</link>&#32;=&#32;502;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00041"/><link linkend="_class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;Client&#32;*<link linkend="_class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79">tcpClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00042"/><link linkend="_class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673">setAvalibleClientFromServer</link>(){};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00043"/><link linkend="_class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e">00043</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;IPAddress&#32;<link linkend="_class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e">clientRemoteIp</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;IPAddress(0,&#32;0,&#32;0,&#32;0);&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00044"/><link linkend="_class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5">00044</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5">clientRemotePort</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00045"/><link linkend="_class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c">00045</link> &#32;&#32;&#32;&#32;IPAddress&#32;<link linkend="_class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c">workIp</link>;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00046"/>00046 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00047"/>00047 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00048"/>00048 };
<anchor xml:id="_flprog_tcp_device_8h_source_1l00049"/>00049 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00050"/>00050 <emphasis role="preprocessor">#ifndef&#32;FLPROG_CORE_ESP8266_OR_ESP32</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00051"/><link linkend="_class_f_l_prog_w5100_tcp_device">00051</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_f_l_prog_w5100_tcp_device">FLProgW5100TcpDevice</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device">FLProgTcpDevice</link>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00052"/>00052 {
<anchor xml:id="_flprog_tcp_device_8h_source_1l00053"/>00053 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1af00df1f2de48023e9e66a03d753e08d6">begin</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00055"/><link linkend="_class_f_l_prog_w5100_tcp_device_1a5c420af9d3787d1a6be1ddb1ce9c6689">00055</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1a5c420af9d3787d1a6be1ddb1ce9c6689">hasClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00056"/><link linkend="_class_f_l_prog_w5100_tcp_device_1abf01392b4e0aa774956c89413256d9cf">00056</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1abf01392b4e0aa774956c89413256d9cf">hasServer</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;server&#32;!=&#32;0;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00057"/>00057 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00058"/>00058 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00059"/><link linkend="_class_f_l_prog_w5100_tcp_device_1a54f5b27a381f63ce3938df3d84785ade">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;Client&#32;*<link linkend="_class_f_l_prog_w5100_tcp_device_1a54f5b27a381f63ce3938df3d84785ade">tcpClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;client;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1ad097d1f33176353990744dc642346e8a">setAvalibleClientFromServer</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00061"/><link linkend="_class_f_l_prog_w5100_tcp_device_1a3da91dd567b9c4584263d26e7c36f99e">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;IPAddress&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1a3da91dd567b9c4584263d26e7c36f99e">clientRemoteIp</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client.remoteIP();&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00062"/><link linkend="_class_f_l_prog_w5100_tcp_device_1a0441a81eb1c4713e0dda53550f196e76">00062</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_w5100_tcp_device_1a0441a81eb1c4713e0dda53550f196e76">clientRemotePort</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client.remotePort();&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00063"/>00063 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00064"/>00064 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00065"/>00065 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00066"/>00066 &#32;&#32;&#32;&#32;EthernetServer&#32;*server;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00067"/>00067 &#32;&#32;&#32;&#32;EthernetClient&#32;client;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00068"/>00068 };
<anchor xml:id="_flprog_tcp_device_8h_source_1l00069"/>00069 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00070"/>00070 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00071"/>00071 <emphasis role="preprocessor">#ifdef&#32;FLPROG_CORE_ESP8266_OR_ESP32</emphasis>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00072"/>00072 <emphasis role="keyword">class&#32;</emphasis>FLProgWiFiTcpDevice&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device">FLProgTcpDevice</link>
<anchor xml:id="_flprog_tcp_device_8h_source_1l00073"/>00073 {
<anchor xml:id="_flprog_tcp_device_8h_source_1l00074"/>00074 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a">begin</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693">hasClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa">hasServer</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;server&#32;!=&#32;0;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00078"/>00078 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00079"/>00079 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;Client&#32;*<link linkend="_class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79">tcpClient</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;client;&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673">setAvalibleClientFromServer</link>();
<anchor xml:id="_flprog_tcp_device_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;IPAddress&#32;<link linkend="_class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e">clientRemoteIp</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client.remoteIP();&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5">clientRemotePort</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;client.remotePort();&#32;};
<anchor xml:id="_flprog_tcp_device_8h_source_1l00084"/>00084 
<anchor xml:id="_flprog_tcp_device_8h_source_1l00085"/>00085 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_flprog_tcp_device_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;WiFiServer&#32;*server;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;WiFiClient&#32;client;
<anchor xml:id="_flprog_tcp_device_8h_source_1l00088"/>00088 };
<anchor xml:id="_flprog_tcp_device_8h_source_1l00089"/>00089 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
