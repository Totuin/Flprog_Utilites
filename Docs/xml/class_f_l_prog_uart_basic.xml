<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="ru">
  <compounddef id="class_f_l_prog_uart_basic" kind="class" language="C++" prot="public">
    <compoundname>FLProgUartBasic</compoundname>
    <includes refid="flprog_uart_8h" local="no">flprogUart.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" prot="protected" static="no" mutable="no">
        <type>byte</type>
        <definition>byte FLProgUartBasic::portSpeed</definition>
        <argsstring></argsstring>
        <name>portSpeed</name>
        <qualifiedname>FLProgUartBasic::portSpeed</qualifiedname>
        <initializer>= <ref refid="flprog_uart_8h_1a586e15e7a1f8a2af0a6968318705bc76" kindref="member">FLPROG_SPEED_9600</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="87" column="10" bodyfile="src/uart/flprogUart.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" prot="protected" static="no" mutable="no">
        <type>byte</type>
        <definition>byte FLProgUartBasic::portDataBits</definition>
        <argsstring></argsstring>
        <name>portDataBits</name>
        <qualifiedname>FLProgUartBasic::portDataBits</qualifiedname>
        <initializer>= <ref refid="flprog_uart_8h_1ac2fb88096fc933887317f27d9944721d" kindref="member">FLPROG_PORT_DATA_BITS_8</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="88" column="10" bodyfile="src/uart/flprogUart.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_l_prog_uart_basic_1a2fe374ae305d62f83c9c3666128839ba" prot="protected" static="no" mutable="no">
        <type>byte</type>
        <definition>byte FLProgUartBasic::portStopBits</definition>
        <argsstring></argsstring>
        <name>portStopBits</name>
        <qualifiedname>FLProgUartBasic::portStopBits</qualifiedname>
        <initializer>= <ref refid="flprog_uart_8h_1a2960dbd875a0ba70e1c6d59811383829" kindref="member">FLPROG_PORT_STOP_BITS_1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="89" column="10" bodyfile="src/uart/flprogUart.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" prot="protected" static="no" mutable="no">
        <type>byte</type>
        <definition>byte FLProgUartBasic::portParity</definition>
        <argsstring></argsstring>
        <name>portParity</name>
        <qualifiedname>FLProgUartBasic::portParity</qualifiedname>
        <initializer>= <ref refid="flprog_uart_8h_1af02172935433823ce803d3ceef53305c" kindref="member">FLPROG_PORT_PARITY_NONE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="90" column="10" bodyfile="src/uart/flprogUart.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a064ae107b3e87fcbda914dd1ae691d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FLProgUartBasic::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>FLProgUartBasic::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="48" column="18" bodyfile="src/uart/flprogUart.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1af91715460cd727c8e537215acfc94953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::begin</definition>
        <argsstring>(int32_t speed)</argsstring>
        <name>begin</name>
        <qualifiedname>FLProgUartBasic::begin</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="49" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1affab4206d98bed8cce55ab256e06a521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::getPortSpeed</definition>
        <argsstring>()</argsstring>
        <name>getPortSpeed</name>
        <qualifiedname>FLProgUartBasic::getPortSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="50" column="10" bodyfile="src/uart/flprogUart.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aa35751c71930dc9f99741577f31edc3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::getPortDataBits</definition>
        <argsstring>()</argsstring>
        <name>getPortDataBits</name>
        <qualifiedname>FLProgUartBasic::getPortDataBits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="51" column="10" bodyfile="src/uart/flprogUart.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aeb7a724e88efb3abb8185eb18c7b6bda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::getPortStopBits</definition>
        <argsstring>()</argsstring>
        <name>getPortStopBits</name>
        <qualifiedname>FLProgUartBasic::getPortStopBits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="52" column="10" bodyfile="src/uart/flprogUart.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1abb933091697af83bfe1c070e98e336de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::getPortParity</definition>
        <argsstring>()</argsstring>
        <name>getPortParity</name>
        <qualifiedname>FLProgUartBasic::getPortParity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="53" column="10" bodyfile="src/uart/flprogUart.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool FLProgUartBasic::hasPort</definition>
        <argsstring>()</argsstring>
        <name>hasPort</name>
        <qualifiedname>FLProgUartBasic::hasPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="54" column="18" bodyfile="src/uart/flprogUart.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FLProgUartBasic::restartPort</definition>
        <argsstring>()</argsstring>
        <name>restartPort</name>
        <qualifiedname>FLProgUartBasic::restartPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="55" column="18" bodyfile="src/uart/flprogUart.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1ae19963e8ca7e14733296f01c78648ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::setPortSpeed</definition>
        <argsstring>(byte speed)</argsstring>
        <name>setPortSpeed</name>
        <qualifiedname>FLProgUartBasic::setPortSpeed</qualifiedname>
        <param>
          <type>byte</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="56" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="3" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1ab77fe56e34df9f7da88c90cb2ccedb96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::setPortDataBits</definition>
        <argsstring>(byte dataBits)</argsstring>
        <name>setPortDataBits</name>
        <qualifiedname>FLProgUartBasic::setPortDataBits</qualifiedname>
        <param>
          <type>byte</type>
          <declname>dataBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="57" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="17" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a70c29e0dfa22aeddd9a266743fd72fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::setPortStopBits</definition>
        <argsstring>(byte stopBits)</argsstring>
        <name>setPortStopBits</name>
        <qualifiedname>FLProgUartBasic::setPortStopBits</qualifiedname>
        <param>
          <type>byte</type>
          <declname>stopBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="58" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="35" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a5790668bb8a773686a99c7fcb0bacb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::setPortParity</definition>
        <argsstring>(byte parity)</argsstring>
        <name>setPortParity</name>
        <qualifiedname>FLProgUartBasic::setPortParity</qualifiedname>
        <param>
          <type>byte</type>
          <declname>parity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="59" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="54" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a9c8935bb47982daeddc7ba42623f16d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::available</definition>
        <argsstring>()</argsstring>
        <name>available</name>
        <qualifiedname>FLProgUartBasic::available</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="60" column="10" bodyfile="src/uart/flprogUart.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a9244f5a52d9185a600353a154b9680a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <qualifiedname>FLProgUartBasic::read</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="61" column="10" bodyfile="src/uart/flprogUart.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aca2a08da2874f79d44364e4d41dd42ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgUartBasic::write</definition>
        <argsstring>(byte *buffer, byte size)</argsstring>
        <name>write</name>
        <qualifiedname>FLProgUartBasic::write</qualifiedname>
        <param>
          <type>byte *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="62" column="10" bodyfile="src/uart/flprogUart.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1ad8d23d6f30b4c2c3ba1baa1dc272103a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(String str)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="64" column="10" bodyfile="src/uart/flprogUart.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a050637813ff315ec48c23c291d07b69b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(const char str[])</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>const char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="65" column="10" bodyfile="src/uart/flprogUart.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1ae20ca481eb8d3ad7b683a59d39bb43a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(char str)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>char</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="66" column="10" bodyfile="src/uart/flprogUart.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1abc041b32487b257e3436cf1b8163a92d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(byte val, int mode=DEC)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>byte</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="67" column="10" bodyfile="src/uart/flprogUart.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a37d29215cc3e727579fc1b1b66b9661c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(int val, int mode=DEC)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="68" column="10" bodyfile="src/uart/flprogUart.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a0111d35725e6d0d692d7e014fa311176" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(long val, int mode=DEC)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>long</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="69" column="10" bodyfile="src/uart/flprogUart.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a66cf37d2ff12b9f753250f480ff62413" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(unsigned long val, int mode=DEC)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>unsigned long</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="70" column="10" bodyfile="src/uart/flprogUart.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a55f75a099c8fffaca8ee1d75fb981a84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::print</definition>
        <argsstring>(float val, int mode=2)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgUartBasic::print</qualifiedname>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="71" column="10" bodyfile="src/uart/flprogUart.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aaa9d2c34cbe789403311c00ca3243f8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(String str)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="72" column="10" bodyfile="src/uart/flprogUart.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a7e41f15b0b508ca01335773fbe659d32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(char str)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>char</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="73" column="10" bodyfile="src/uart/flprogUart.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a8f88093ae0345c0748675e969a86e835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(const char str[])</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>const char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="74" column="10" bodyfile="src/uart/flprogUart.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a2881361255d990b7efc1b387350235f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(byte val, int mode=DEC)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>byte</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="75" column="10" bodyfile="src/uart/flprogUart.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1ab2c50d03ac5529bf02bf0c01379cbebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(int val, int mode=DEC)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="76" column="10" bodyfile="src/uart/flprogUart.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aac398f36ba44a7ba4aee1111b5b57974" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(long val, int mode=DEC)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>long</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="77" column="10" bodyfile="src/uart/flprogUart.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a4f6c606c25190595c28599515aafe649" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(unsigned long val, int mode=DEC)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>unsigned long</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>DEC</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="78" column="10" bodyfile="src/uart/flprogUart.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a692cf188993c6fe0c349679047285e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>(float val, int mode=2)</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="79" column="10" bodyfile="src/uart/flprogUart.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a3fd1c1900f151545bb041064dedd1ddc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::println</definition>
        <argsstring>()</argsstring>
        <name>println</name>
        <qualifiedname>FLProgUartBasic::println</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="80" column="10" bodyfile="src/uart/flprogUart.h" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a746fd4b3995e52b77d8845be2235bd15" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Stream *</type>
        <definition>virtual Stream * FLProgUartBasic::uartPort</definition>
        <argsstring>()</argsstring>
        <name>uartPort</name>
        <qualifiedname>FLProgUartBasic::uartPort</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="83" column="20" bodyfile="src/uart/flprogUart.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aa72d7875446176e7e549a241873fdb14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t FLProgUartBasic::speedFromCode</definition>
        <argsstring>()</argsstring>
        <name>speedFromCode</name>
        <qualifiedname>FLProgUartBasic::speedFromCode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="84" column="14" bodyfile="src/uart/flprogUart.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1a7f4dcee936a0335377ff21df3ed3b59f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FLProgUartBasic::serialCodeForParametrs</definition>
        <argsstring>()</argsstring>
        <name>serialCodeForParametrs</name>
        <qualifiedname>FLProgUartBasic::serialCodeForParametrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="85" column="9" bodyfile="src/uart/flprogUart.cpp" bodystart="73" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_uart_basic_1aed506376652d64a4674d61a7ed99c08c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgUartBasic::setCodeFromSpeed</definition>
        <argsstring>(int32_t speed)</argsstring>
        <name>setCodeFromSpeed</name>
        <qualifiedname>FLProgUartBasic::setCodeFromSpeed</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/uart/flprogUart.h" line="86" column="10" bodyfile="src/uart/flprogUart.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/uart/flprogUart.h" line="45" column="1" bodyfile="src/uart/flprogUart.h" bodystart="46" bodyend="91"/>
    <listofallmembers>
      <member refid="class_f_l_prog_uart_basic_1a9c8935bb47982daeddc7ba42623f16d9" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>available</name></member>
      <member refid="class_f_l_prog_uart_basic_1a064ae107b3e87fcbda914dd1ae691d57" prot="public" virt="virtual"><scope>FLProgUartBasic</scope><name>begin</name></member>
      <member refid="class_f_l_prog_uart_basic_1af91715460cd727c8e537215acfc94953" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>begin</name></member>
      <member refid="class_f_l_prog_uart_basic_1aa35751c71930dc9f99741577f31edc3f" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>getPortDataBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1abb933091697af83bfe1c070e98e336de" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>getPortParity</name></member>
      <member refid="class_f_l_prog_uart_basic_1affab4206d98bed8cce55ab256e06a521" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>getPortSpeed</name></member>
      <member refid="class_f_l_prog_uart_basic_1aeb7a724e88efb3abb8185eb18c7b6bda" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>getPortStopBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" prot="public" virt="virtual"><scope>FLProgUartBasic</scope><name>hasPort</name></member>
      <member refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>portDataBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>portParity</name></member>
      <member refid="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>portSpeed</name></member>
      <member refid="class_f_l_prog_uart_basic_1a2fe374ae305d62f83c9c3666128839ba" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>portStopBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1ad8d23d6f30b4c2c3ba1baa1dc272103a" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1a050637813ff315ec48c23c291d07b69b" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1ae20ca481eb8d3ad7b683a59d39bb43a8" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1abc041b32487b257e3436cf1b8163a92d" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1a37d29215cc3e727579fc1b1b66b9661c" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1a0111d35725e6d0d692d7e014fa311176" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1a66cf37d2ff12b9f753250f480ff62413" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1a55f75a099c8fffaca8ee1d75fb981a84" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>print</name></member>
      <member refid="class_f_l_prog_uart_basic_1aaa9d2c34cbe789403311c00ca3243f8e" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a7e41f15b0b508ca01335773fbe659d32" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a8f88093ae0345c0748675e969a86e835" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a2881361255d990b7efc1b387350235f9" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1ab2c50d03ac5529bf02bf0c01379cbebb" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1aac398f36ba44a7ba4aee1111b5b57974" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a4f6c606c25190595c28599515aafe649" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a692cf188993c6fe0c349679047285e66" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a3fd1c1900f151545bb041064dedd1ddc" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>println</name></member>
      <member refid="class_f_l_prog_uart_basic_1a9244f5a52d9185a600353a154b9680a5" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>read</name></member>
      <member refid="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" prot="public" virt="virtual"><scope>FLProgUartBasic</scope><name>restartPort</name></member>
      <member refid="class_f_l_prog_uart_basic_1a7f4dcee936a0335377ff21df3ed3b59f" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>serialCodeForParametrs</name></member>
      <member refid="class_f_l_prog_uart_basic_1aed506376652d64a4674d61a7ed99c08c" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>setCodeFromSpeed</name></member>
      <member refid="class_f_l_prog_uart_basic_1ab77fe56e34df9f7da88c90cb2ccedb96" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>setPortDataBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1a5790668bb8a773686a99c7fcb0bacb47" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>setPortParity</name></member>
      <member refid="class_f_l_prog_uart_basic_1ae19963e8ca7e14733296f01c78648ed3" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>setPortSpeed</name></member>
      <member refid="class_f_l_prog_uart_basic_1a70c29e0dfa22aeddd9a266743fd72fe7" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>setPortStopBits</name></member>
      <member refid="class_f_l_prog_uart_basic_1aa72d7875446176e7e549a241873fdb14" prot="protected" virt="non-virtual"><scope>FLProgUartBasic</scope><name>speedFromCode</name></member>
      <member refid="class_f_l_prog_uart_basic_1a746fd4b3995e52b77d8845be2235bd15" prot="protected" virt="virtual"><scope>FLProgUartBasic</scope><name>uartPort</name></member>
      <member refid="class_f_l_prog_uart_basic_1aca2a08da2874f79d44364e4d41dd42ba" prot="public" virt="non-virtual"><scope>FLProgUartBasic</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
