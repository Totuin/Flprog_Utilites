<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="ru">
  <compounddef id="class_f_l_prog_tcp_device" kind="class" language="C++" prot="public">
    <compoundname>FLProgTcpDevice</compoundname>
    <derivedcompoundref refid="class_f_l_prog_w5100_tcp_device" prot="public" virt="non-virtual">FLProgW5100TcpDevice</derivedcompoundref>
    <includes refid="flprog_tcp_device_8h" local="no">flprogTcpDevice.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool FLProgTcpDevice::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <qualifiedname>FLProgTcpDevice::mode</qualifiedname>
        <initializer>= <ref refid="flprog_tcp_device_8h_1a04f51819679f0e7eb603a652f2e8fb45" kindref="member">FLPROG_TSP_CLIENT_MODE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="39" column="10" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int FLProgTcpDevice::tcpPort</definition>
        <argsstring></argsstring>
        <name>tcpPort</name>
        <qualifiedname>FLProgTcpDevice::tcpPort</qualifiedname>
        <initializer>= 502</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="40" column="9" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c" prot="protected" static="no" mutable="no">
        <type>IPAddress</type>
        <definition>IPAddress FLProgTcpDevice::workIp</definition>
        <argsstring></argsstring>
        <name>workIp</name>
        <qualifiedname>FLProgTcpDevice::workIp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="45" column="15" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a6284fa6d5ebbb5d80dbac1d33c8169ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::beClient</definition>
        <argsstring>()</argsstring>
        <name>beClient</name>
        <qualifiedname>FLProgTcpDevice::beClient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="20" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="11" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a19b4deabd8751ad90ffc8f78074786d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::beServer</definition>
        <argsstring>()</argsstring>
        <name>beServer</name>
        <qualifiedname>FLProgTcpDevice::beServer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="21" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="19" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a640fbd479b1cce71b96cbd2d57e29c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgTcpDevice::available</definition>
        <argsstring>()</argsstring>
        <name>available</name>
        <qualifiedname>FLProgTcpDevice::available</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="22" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1af8b5c4ec514ae4187b72f9150cd11dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgTcpDevice::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <qualifiedname>FLProgTcpDevice::read</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="23" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a79a6dcab0f5f8b3d176e0a84e7f1eb89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::setPort</definition>
        <argsstring>(int port)</argsstring>
        <name>setPort</name>
        <qualifiedname>FLProgTcpDevice::setPort</qualifiedname>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="24" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="3" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1af85f742fc5af14497d586707a35e8852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FLProgTcpDevice::connected</definition>
        <argsstring>()</argsstring>
        <name>connected</name>
        <qualifiedname>FLProgTcpDevice::connected</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="25" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <qualifiedname>FLProgTcpDevice::connect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="26" column="10" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::connect</definition>
        <argsstring>(byte ipFirst, byte ipSecond, byte ipThird, byte ipFourth)</argsstring>
        <name>connect</name>
        <qualifiedname>FLProgTcpDevice::connect</qualifiedname>
        <param>
          <type>byte</type>
          <declname>ipFirst</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>ipSecond</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>ipThird</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>ipFourth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="27" column="10" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1aa03e43ea6cc1646f02b0577de0e500dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::connect</definition>
        <argsstring>(uint16_t ipFirst, uint16_t ipSecond, uint16_t ipThird, uint16_t ipFourth, int newPort)</argsstring>
        <name>connect</name>
        <qualifiedname>FLProgTcpDevice::connect</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>ipFirst</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ipSecond</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ipThird</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ipFourth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="28" column="18" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1ae373c7a0ad06e3952ba73c0258057107" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::connect</definition>
        <argsstring>(IPAddress newIp, int newPort)</argsstring>
        <name>connect</name>
        <qualifiedname>FLProgTcpDevice::connect</qualifiedname>
        <param>
          <type>IPAddress</type>
          <declname>newIp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="29" column="18" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="81" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a1847080cabb96d96ba936478c9d344bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::print</definition>
        <argsstring>(String data)</argsstring>
        <name>print</name>
        <qualifiedname>FLProgTcpDevice::print</qualifiedname>
        <param>
          <type>String</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="30" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a89be399dd246d274c43866c28342e25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte</type>
        <definition>byte FLProgTcpDevice::write</definition>
        <argsstring>(byte buffer[], byte size)</argsstring>
        <name>write</name>
        <qualifiedname>FLProgTcpDevice::write</qualifiedname>
        <param>
          <type>byte</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <param>
          <type>byte</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="31" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FLProgTcpDevice::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>FLProgTcpDevice::begin</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1af00df1f2de48023e9e66a03d753e08d6">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="32" column="18" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1ab251ab3378529ff4c80bf2d44a0afca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::restart</definition>
        <argsstring>()</argsstring>
        <name>restart</name>
        <qualifiedname>FLProgTcpDevice::restart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="33" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1af26e6967e9cef10b93c5d6e5b60cd2e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FLProgTcpDevice::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>FLProgTcpDevice::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="34" column="10" bodyfile="src/tcp/flprogTcpDevice.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool FLProgTcpDevice::hasClient</definition>
        <argsstring>()</argsstring>
        <name>hasClient</name>
        <qualifiedname>FLProgTcpDevice::hasClient</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1a5c420af9d3787d1a6be1ddb1ce9c6689">hasClient</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="35" column="18" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool FLProgTcpDevice::hasServer</definition>
        <argsstring>()</argsstring>
        <name>hasServer</name>
        <qualifiedname>FLProgTcpDevice::hasServer</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1abf01392b4e0aa774956c89413256d9cf">hasServer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="36" column="18" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Client *</type>
        <definition>virtual Client * FLProgTcpDevice::tcpClient</definition>
        <argsstring>()</argsstring>
        <name>tcpClient</name>
        <qualifiedname>FLProgTcpDevice::tcpClient</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1a54f5b27a381f63ce3938df3d84785ade">tcpClient</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="41" column="20" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FLProgTcpDevice::setAvalibleClientFromServer</definition>
        <argsstring>()</argsstring>
        <name>setAvalibleClientFromServer</name>
        <qualifiedname>FLProgTcpDevice::setAvalibleClientFromServer</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1ad097d1f33176353990744dc642346e8a">setAvalibleClientFromServer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="42" column="18" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IPAddress</type>
        <definition>virtual IPAddress FLProgTcpDevice::clientRemoteIp</definition>
        <argsstring>()</argsstring>
        <name>clientRemoteIp</name>
        <qualifiedname>FLProgTcpDevice::clientRemoteIp</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1a3da91dd567b9c4584263d26e7c36f99e">clientRemoteIp</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="43" column="23" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int FLProgTcpDevice::clientRemotePort</definition>
        <argsstring>()</argsstring>
        <name>clientRemotePort</name>
        <qualifiedname>FLProgTcpDevice::clientRemotePort</qualifiedname>
        <reimplementedby refid="class_f_l_prog_w5100_tcp_device_1a0441a81eb1c4713e0dda53550f196e76">clientRemotePort</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tcp/flprogTcpDevice.h" line="44" column="17" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>FLProgTcpDevice</label>
        <link refid="class_f_l_prog_tcp_device"/>
      </node>
      <node id="2">
        <label>FLProgW5100TcpDevice</label>
        <link refid="class_f_l_prog_w5100_tcp_device"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/tcp/flprogTcpDevice.h" line="17" column="1" bodyfile="src/tcp/flprogTcpDevice.h" bodystart="18" bodyend="48"/>
    <listofallmembers>
      <member refid="class_f_l_prog_tcp_device_1a640fbd479b1cce71b96cbd2d57e29c93" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>available</name></member>
      <member refid="class_f_l_prog_tcp_device_1a6284fa6d5ebbb5d80dbac1d33c8169ad" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>beClient</name></member>
      <member refid="class_f_l_prog_tcp_device_1aa4d64e12f9dfdb00126a74cd9d9e8e7a" prot="public" virt="virtual"><scope>FLProgTcpDevice</scope><name>begin</name></member>
      <member refid="class_f_l_prog_tcp_device_1a19b4deabd8751ad90ffc8f78074786d7" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>beServer</name></member>
      <member refid="class_f_l_prog_tcp_device_1aac287f2c4f4ebd7d402c686d2759349e" prot="protected" virt="virtual"><scope>FLProgTcpDevice</scope><name>clientRemoteIp</name></member>
      <member refid="class_f_l_prog_tcp_device_1a02c88623d43e6d6496f9ac716ba12fb5" prot="protected" virt="virtual"><scope>FLProgTcpDevice</scope><name>clientRemotePort</name></member>
      <member refid="class_f_l_prog_tcp_device_1a154982dbaa1113ed868f976a21e463b4" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>connect</name></member>
      <member refid="class_f_l_prog_tcp_device_1a61d78922101dbbd0c4952998637be220" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>connect</name></member>
      <member refid="class_f_l_prog_tcp_device_1aa03e43ea6cc1646f02b0577de0e500dc" prot="public" virt="virtual"><scope>FLProgTcpDevice</scope><name>connect</name></member>
      <member refid="class_f_l_prog_tcp_device_1ae373c7a0ad06e3952ba73c0258057107" prot="public" virt="virtual"><scope>FLProgTcpDevice</scope><name>connect</name></member>
      <member refid="class_f_l_prog_tcp_device_1af85f742fc5af14497d586707a35e8852" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>connected</name></member>
      <member refid="class_f_l_prog_tcp_device_1a9f82bc3efe62e9346d2e0e3a24fdd693" prot="public" virt="virtual"><scope>FLProgTcpDevice</scope><name>hasClient</name></member>
      <member refid="class_f_l_prog_tcp_device_1a8beddb2d793cb22786c1ccde51807ffa" prot="public" virt="virtual"><scope>FLProgTcpDevice</scope><name>hasServer</name></member>
      <member refid="class_f_l_prog_tcp_device_1a0c233255b7b7d05fc3450ad0cb5c2514" prot="protected" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>mode</name></member>
      <member refid="class_f_l_prog_tcp_device_1a1847080cabb96d96ba936478c9d344bf" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>print</name></member>
      <member refid="class_f_l_prog_tcp_device_1af8b5c4ec514ae4187b72f9150cd11dcd" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>read</name></member>
      <member refid="class_f_l_prog_tcp_device_1ab251ab3378529ff4c80bf2d44a0afca2" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>restart</name></member>
      <member refid="class_f_l_prog_tcp_device_1a0c3fcd4630440016a9fd506e38f99673" prot="protected" virt="virtual"><scope>FLProgTcpDevice</scope><name>setAvalibleClientFromServer</name></member>
      <member refid="class_f_l_prog_tcp_device_1a79a6dcab0f5f8b3d176e0a84e7f1eb89" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>setPort</name></member>
      <member refid="class_f_l_prog_tcp_device_1af26e6967e9cef10b93c5d6e5b60cd2e3" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>stop</name></member>
      <member refid="class_f_l_prog_tcp_device_1a4433d323e544ae9a190040b3dd69fe79" prot="protected" virt="virtual"><scope>FLProgTcpDevice</scope><name>tcpClient</name></member>
      <member refid="class_f_l_prog_tcp_device_1aa645e6062fed7ab7380606c83ac14fcf" prot="protected" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>tcpPort</name></member>
      <member refid="class_f_l_prog_tcp_device_1a86057670ad2c44794686d9d492448c5c" prot="protected" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>workIp</name></member>
      <member refid="class_f_l_prog_tcp_device_1a89be399dd246d274c43866c28342e25d" prot="public" virt="non-virtual"><scope>FLProgTcpDevice</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
