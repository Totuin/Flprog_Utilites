<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="ru">
  <compounddef id="namespaceflprog" kind="namespace" language="C++">
    <compoundname>flprog</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceflprog_1acc5a367798f79f5340fa5de409ac22d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool flprog::isTimer</definition>
        <argsstring>(uint32_t startTime, uint32_t period)</argsstring>
        <name>isTimer</name>
        <qualifiedname>flprog::isTimer</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>startTime</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="68" column="10" bodyfile="src/flprogUtilites.cpp" bodystart="132" bodyend="135" declfile="src/flprogUtilites.h" declline="68" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1a9f288356ee2d40b2b2ada99354e56ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool flprog::isTimerMicros</definition>
        <argsstring>(unsigned long startTime, unsigned long period)</argsstring>
        <name>isTimerMicros</name>
        <qualifiedname>flprog::isTimerMicros</qualifiedname>
        <param>
          <type>unsigned long</type>
          <declname>startTime</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="69" column="10" bodyfile="src/flprogUtilites.cpp" bodystart="137" bodyend="140" declfile="src/flprogUtilites.h" declline="69" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1aca0ea27d0df934b3fa846fcfcf6b5d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int flprog::serialCodeForParametrs</definition>
        <argsstring>(byte portDataBits, byte portStopBits, byte portParity)</argsstring>
        <name>serialCodeForParametrs</name>
        <qualifiedname>flprog::serialCodeForParametrs</qualifiedname>
        <param>
          <type>byte</type>
          <declname>portDataBits</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>portStopBits</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>portParity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="70" column="9" bodyfile="src/flprogUtilites.cpp" bodystart="3" bodyend="31" declfile="src/flprogUtilites.h" declline="70" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1a82fda12bd0f0533f62fd6cf82a3e92fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t flprog::speedFromCode</definition>
        <argsstring>(byte code)</argsstring>
        <name>speedFromCode</name>
        <qualifiedname>flprog::speedFromCode</qualifiedname>
        <param>
          <type>byte</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="71" column="14" bodyfile="src/flprogUtilites.cpp" bodystart="33" bodyend="77" declfile="src/flprogUtilites.h" declline="71" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1a7661cd972a044b3c2fbc6cb707a19c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t flprog::codeFromSpeed</definition>
        <argsstring>(int32_t speed)</argsstring>
        <name>codeFromSpeed</name>
        <qualifiedname>flprog::codeFromSpeed</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="72" column="13" bodyfile="src/flprogUtilites.cpp" bodystart="79" bodyend="121" declfile="src/flprogUtilites.h" declline="72" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1a14c0502a16183c50f02f25cb25a80728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t flprog::difference32</definition>
        <argsstring>(uint32_t start, uint32_t end)</argsstring>
        <name>difference32</name>
        <qualifiedname>flprog::difference32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="73" column="14" bodyfile="src/flprogUtilites.cpp" bodystart="123" bodyend="130" declfile="src/flprogUtilites.h" declline="73" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceflprog_1ae35684dee57af61e1a86fb2e3ab294d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t flprog::timeBack</definition>
        <argsstring>(uint32_t value)</argsstring>
        <name>timeBack</name>
        <qualifiedname>flprog::timeBack</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/flprogUtilites.h" line="74" column="14" bodyfile="src/flprogUtilites.cpp" bodystart="142" bodyend="150" declfile="src/flprogUtilites.h" declline="74" declcolumn="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/flprogUtilites.h" line="66" column="1"/>
  </compounddef>
</doxygen>
