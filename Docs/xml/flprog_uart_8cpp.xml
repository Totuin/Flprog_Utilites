<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="ru">
  <compounddef id="flprog_uart_8cpp" kind="file" language="C++">
    <compoundname>flprogUart.cpp</compoundname>
    <includes refid="flprog_uart_8h" local="yes">flprogUart.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="9">
        <label>Ethernet.h</label>
      </node>
      <node id="4">
        <label>flprogUtilites.h</label>
        <link refid="flprog_utilites_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>i2c/flprogI2C.h</label>
        <link refid="flprog_i2_c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>flprogI2C_sensorsBasic.h</label>
        <link refid="flprog_i2_c__sensors_basic_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tcp/flprogTcpDevice.h</label>
        <link refid="flprog_tcp_device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/uart/flprogUart.cpp</label>
        <link refid="flprog_uart_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>flprogUart.h</label>
        <link refid="flprog_uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>softwareUart\flprogSoftwareUart.h</label>
        <link refid="flprog_software_uart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SPI.h</label>
      </node>
      <node id="6">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="flprog_uart_8h" kindref="compound">flprogUart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_f_l_prog_uart_basic_1ae19963e8ca7e14733296f01c78648ed3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1ae19963e8ca7e14733296f01c78648ed3" kindref="member">FLProgUartBasic::setPortSpeed</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>speed)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" kindref="member">portSpeed</ref><sp/>==<sp/>speed)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" kindref="member">portSpeed</ref><sp/>=<sp/>speed;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" kindref="member">hasPort</ref>())</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" kindref="member">restartPort</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_f_l_prog_uart_basic_1ab77fe56e34df9f7da88c90cb2ccedb96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1ab77fe56e34df9f7da88c90cb2ccedb96" kindref="member">FLProgUartBasic::setPortDataBits</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>dataBits)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dataBits<sp/>&lt;<sp/>5)<sp/>||<sp/>(dataBits<sp/>&gt;<sp/>8))</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" kindref="member">portDataBits</ref><sp/>==<sp/>dataBits)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" kindref="member">portDataBits</ref><sp/>=<sp/>dataBits;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" kindref="member">hasPort</ref>())</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" kindref="member">restartPort</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_f_l_prog_uart_basic_1a70c29e0dfa22aeddd9a266743fd72fe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1a70c29e0dfa22aeddd9a266743fd72fe7" kindref="member">FLProgUartBasic::setPortStopBits</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>stopBits)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((stopBits<sp/>&lt;<sp/>1)<sp/>||<sp/>(stopBits<sp/>&gt;<sp/>2))</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a2fe374ae305d62f83c9c3666128839ba" kindref="member">portStopBits</ref><sp/>==<sp/>stopBits)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a2fe374ae305d62f83c9c3666128839ba" kindref="member">portStopBits</ref><sp/>=<sp/>stopBits;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" kindref="member">hasPort</ref>())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" kindref="member">restartPort</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_f_l_prog_uart_basic_1a5790668bb8a773686a99c7fcb0bacb47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1a5790668bb8a773686a99c7fcb0bacb47" kindref="member">FLProgUartBasic::setPortParity</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>parity)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((parity<sp/>&lt;<sp/>0)<sp/>||<sp/>(parity<sp/>&gt;<sp/>2))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" kindref="member">portParity</ref><sp/>==<sp/>parity)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" kindref="member">portParity</ref><sp/>=<sp/>parity;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_f_l_prog_uart_basic_1a76ec6264530f2bd0cf20fd3ccced3370" kindref="member">hasPort</ref>())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a9d2aed1e23569871e0fc5c2099db85dc" kindref="member">restartPort</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_f_l_prog_uart_basic_1a7f4dcee936a0335377ff21df3ed3b59f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1a7f4dcee936a0335377ff21df3ed3b59f" kindref="member">FLProgUartBasic::serialCodeForParametrs</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a2fe374ae305d62f83c9c3666128839ba" kindref="member">portStopBits</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>8;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" kindref="member">portDataBits</ref><sp/>==<sp/>6)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" kindref="member">portDataBits</ref><sp/>==<sp/>7)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a540010cda343171fbdf6ecaebc05052e" kindref="member">portDataBits</ref><sp/>==<sp/>8)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" kindref="member">portParity</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_l_prog_uart_basic_1a1323d724631592443ca2f50280021e3e" kindref="member">portParity</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>code<sp/>+<sp/>48;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_f_l_prog_uart_basic_1aa72d7875446176e7e549a241873fdb14" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_f_l_prog_uart_basic_1aa72d7875446176e7e549a241873fdb14" kindref="member">FLProgUartBasic::speedFromCode</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceflprog_1a82fda12bd0f0533f62fd6cf82a3e92fd" kindref="member">flprog::speedFromCode</ref>(<ref refid="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" kindref="member">portSpeed</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_f_l_prog_uart_basic_1aed506376652d64a4674d61a7ed99c08c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1aed506376652d64a4674d61a7ed99c08c" kindref="member">FLProgUartBasic::setCodeFromSpeed</ref>(int32_t<sp/>speed)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1ac96e85e10437faff18e6a6c6e70f2254" kindref="member">portSpeed</ref><sp/>=<sp/><ref refid="namespaceflprog_1a7661cd972a044b3c2fbc6cb707a19c4b" kindref="member">flprog::codeFromSpeed</ref>(speed);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_f_l_prog_uart_basic_1af91715460cd727c8e537215acfc94953" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_l_prog_uart_basic_1a064ae107b3e87fcbda914dd1ae691d57" kindref="member">FLProgUartBasic::begin</ref>(int32_t<sp/>speed)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1aed506376652d64a4674d61a7ed99c08c" kindref="member">setCodeFromSpeed</ref>(speed);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_l_prog_uart_basic_1a064ae107b3e87fcbda914dd1ae691d57" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/uart/flprogUart.cpp"/>
  </compounddef>
</doxygen>
