.TH "FLProgUartBasic" 3 "Чт 23 Фев 2023" "Version 1" "FLProg Utilites" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FLProgUartBasic
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <flprogUart\&.h>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "virtual void \fBbegin\fP ()"
.br
.ti -1c
.RI "void \fBbegin\fP (int32_t speed)"
.br
.ti -1c
.RI "byte \fBgetPortSpeed\fP ()"
.br
.ti -1c
.RI "byte \fBgetPortDataBits\fP ()"
.br
.ti -1c
.RI "byte \fBgetPortStopBits\fP ()"
.br
.ti -1c
.RI "byte \fBgetPortParity\fP ()"
.br
.ti -1c
.RI "virtual bool \fBhasPort\fP ()"
.br
.ti -1c
.RI "virtual void \fBrestartPort\fP ()"
.br
.ti -1c
.RI "void \fBsetPortSpeed\fP (byte speed)"
.br
.ti -1c
.RI "void \fBsetPortDataBits\fP (byte dataBits)"
.br
.ti -1c
.RI "void \fBsetPortStopBits\fP (byte stopBits)"
.br
.ti -1c
.RI "void \fBsetPortParity\fP (byte parity)"
.br
.ti -1c
.RI "byte \fBavailable\fP ()"
.br
.ti -1c
.RI "byte \fBread\fP ()"
.br
.ti -1c
.RI "byte \fBwrite\fP (byte *buffer, byte size)"
.br
.ti -1c
.RI "void \fBprint\fP (String str)"
.br
.ti -1c
.RI "void \fBprint\fP (const char str[])"
.br
.ti -1c
.RI "void \fBprint\fP (char str)"
.br
.ti -1c
.RI "void \fBprint\fP (byte val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprint\fP (int val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprint\fP (long val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprint\fP (unsigned long val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprint\fP (float val, int mode=2)"
.br
.ti -1c
.RI "void \fBprintln\fP (String str)"
.br
.ti -1c
.RI "void \fBprintln\fP (char str)"
.br
.ti -1c
.RI "void \fBprintln\fP (const char str[])"
.br
.ti -1c
.RI "void \fBprintln\fP (byte val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprintln\fP (int val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprintln\fP (long val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprintln\fP (unsigned long val, int mode=DEC)"
.br
.ti -1c
.RI "void \fBprintln\fP (float val, int mode=2)"
.br
.ti -1c
.RI "void \fBprintln\fP ()"
.br
.in -1c
.SS "Защищенные члены"

.in +1c
.ti -1c
.RI "virtual Stream * \fBuartPort\fP ()"
.br
.ti -1c
.RI "uint32_t \fBspeedFromCode\fP ()"
.br
.ti -1c
.RI "int \fBserialCodeForParametrs\fP ()"
.br
.ti -1c
.RI "void \fBsetCodeFromSpeed\fP (int32_t speed)"
.br
.in -1c
.SS "Защищенные данные"

.in +1c
.ti -1c
.RI "byte \fBportSpeed\fP = \fBFLPROG_SPEED_9600\fP"
.br
.ti -1c
.RI "byte \fBportDataBits\fP = \fBFLPROG_PORT_DATA_BITS_8\fP"
.br
.ti -1c
.RI "byte \fBportStopBits\fP = \fBFLPROG_PORT_STOP_BITS_1\fP"
.br
.ti -1c
.RI "byte \fBportParity\fP = \fBFLPROG_PORT_PARITY_NONE\fP"
.br
.in -1c
.SH "Подробное описание"
.PP 
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB45\fP
.SH "Методы"
.PP 
.SS "byte FLProgUartBasic::available ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB60\fP
.SS "virtual void FLProgUartBasic::begin ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB48\fP
.SS "void FLProgUartBasic::begin (int32_t speed)"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB113\fP
.SS "byte FLProgUartBasic::getPortDataBits ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB51\fP
.SS "byte FLProgUartBasic::getPortParity ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB53\fP
.SS "byte FLProgUartBasic::getPortSpeed ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB50\fP
.SS "byte FLProgUartBasic::getPortStopBits ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB52\fP
.SS "virtual bool FLProgUartBasic::hasPort ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB54\fP
.SS "void FLProgUartBasic::print (byte val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB67\fP
.SS "void FLProgUartBasic::print (char str)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB66\fP
.SS "void FLProgUartBasic::print (const char str[])\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB65\fP
.SS "void FLProgUartBasic::print (float val, int mode = \fC2\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB71\fP
.SS "void FLProgUartBasic::print (int val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB68\fP
.SS "void FLProgUartBasic::print (long val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB69\fP
.SS "void FLProgUartBasic::print (String str)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB64\fP
.SS "void FLProgUartBasic::print (unsigned long val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB70\fP
.SS "void FLProgUartBasic::println ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB80\fP
.SS "void FLProgUartBasic::println (byte val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB75\fP
.SS "void FLProgUartBasic::println (char str)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB73\fP
.SS "void FLProgUartBasic::println (const char str[])\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB74\fP
.SS "void FLProgUartBasic::println (float val, int mode = \fC2\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB79\fP
.SS "void FLProgUartBasic::println (int val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB76\fP
.SS "void FLProgUartBasic::println (long val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB77\fP
.SS "void FLProgUartBasic::println (String str)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB72\fP
.SS "void FLProgUartBasic::println (unsigned long val, int mode = \fCDEC\fP)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB78\fP
.SS "byte FLProgUartBasic::read ()\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB61\fP
.SS "virtual void FLProgUartBasic::restartPort ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB55\fP
.SS "int FLProgUartBasic::serialCodeForParametrs ()\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB73\fP
.SS "void FLProgUartBasic::setCodeFromSpeed (int32_t speed)\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB108\fP
.SS "void FLProgUartBasic::setPortDataBits (byte dataBits)"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB17\fP
.SS "void FLProgUartBasic::setPortParity (byte parity)"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB54\fP
.SS "void FLProgUartBasic::setPortSpeed (byte speed)"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB3\fP
.SS "void FLProgUartBasic::setPortStopBits (byte stopBits)"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB35\fP
.SS "uint32_t FLProgUartBasic::speedFromCode ()\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.cpp\fP строка \fB103\fP
.SS "virtual Stream * FLProgUartBasic::uartPort ()\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB83\fP
.SS "byte FLProgUartBasic::write (byte * buffer, byte size)\fC [inline]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB62\fP
.SH "Данные класса"
.PP 
.SS "byte FLProgUartBasic::portDataBits = \fBFLPROG_PORT_DATA_BITS_8\fP\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB88\fP
.SS "byte FLProgUartBasic::portParity = \fBFLPROG_PORT_PARITY_NONE\fP\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB90\fP
.SS "byte FLProgUartBasic::portSpeed = \fBFLPROG_SPEED_9600\fP\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB87\fP
.SS "byte FLProgUartBasic::portStopBits = \fBFLPROG_PORT_STOP_BITS_1\fP\fC [protected]\fP"

.PP
См\&. определение в файле \fBflprogUart\&.h\fP строка \fB89\fP

.SH "Автор"
.PP 
Автоматически создано Doxygen для FLProg Utilites из исходного текста\&.
